plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '6.25.0'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


checkstyle {
    toolVersion = '10.12.3'
    configFile = rootProject.file('config/checkstyle/simple.xml')
}

spotless {
    java {
        eclipse()
        target 'src/**/*.java'
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
    archiveFileName = 'app.jar'
}



import org.apache.tools.ant.DirectoryScanner

task buildAndCopyReact(type: Exec) {
    group = "custom"
    description = "Builds the React app and copies it into Spring Boot static folder"

    def frontendDir = "$projectDir/frontend/reactapp"
    def springStaticAppDir = "$projectDir/src/main/resources/static/app"
    def springStaticAssetsDir = "$projectDir/src/main/resources/static/assets"

    doFirst {
        println "Cleaning old static files..."
        delete fileTree(springStaticAppDir)
        delete fileTree(springStaticAssetsDir)
    }

    // Run npm install and npm run build
    commandLine "bash", "-c", """
        set -e
        cd ${frontendDir}
        npm install
        npm run build
    """
}

task copyReactBuild(type: Copy) {
    dependsOn buildAndCopyReact
    group = "custom"
    description = "Copies built React app into Spring Boot static folder"

    def frontendDir = "$projectDir/frontend/reactapp"
    def springStaticAppDir = "$projectDir/src/main/resources/static/app"
    def springStaticAssetsDir = "$projectDir/src/main/resources/static/assets"

    def buildDir = file("$frontendDir/build").exists() ? "$frontendDir/build" :
                   file("$frontendDir/dist").exists() ? "$frontendDir/dist" : null

    if (buildDir == null) {
        throw new GradleException("No React build output found (expected 'build/' or 'dist/') in $frontendDir")
    }

    from(buildDir)
    into(springStaticAppDir)

    doLast {
        println "Copying assets to static/assets..."
        def assetsDir = file("$springStaticAppDir/assets")
        if (assetsDir.exists()) {
            copy {
                from "$springStaticAppDir/assets"
                into springStaticAssetsDir
            }
        } else {
            println "No assets directory found to copy."
        }
        println "React build copied to static folder."
    }
}

